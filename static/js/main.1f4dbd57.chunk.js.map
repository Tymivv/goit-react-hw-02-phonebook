{"version":3,"sources":["components/App/App.jsx","index.js"],"names":["App","state","contacts","id","nameContact","tel","filter","name","number","activeCity","handleChange","target","value","setState","addContacts","evt","preventDefault","some","alert","newContact","nanoid","active","prevState","handleFilterChange","getFilteredContacts","normalizedFilter","toLowerCase","includes","handleStartDeleting","isDeleteModalOpen","deleteContacts","filteredContacts","this","onSubmit","type","pattern","title","required","onChange","e","map","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAGMA,E,4MACJC,MAAQ,CACNC,SAAU,CACR,CAAEC,GAAI,OAAQC,YAAa,gBAAiBC,IAAK,aACjD,CAAEF,GAAI,OAAQC,YAAa,iBAAkBC,IAAK,aAClD,CAAEF,GAAI,OAAQC,YAAa,gBAAiBC,IAAK,aACjD,CAAEF,GAAI,OAAQC,YAAa,iBAAkBC,IAAK,cAEpDC,OAAQ,GACRC,KAAM,GACNC,OAAQ,GACRC,WAAY,I,EAGdC,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRJ,EAAgBI,EAAhBJ,KAAMK,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,YAAc,SAAAC,GAEZ,GADAA,EAAIC,iBAEF,EAAKf,MAAMC,SAASe,MAClB,cAAGd,GAAH,IAAOC,EAAP,EAAOA,YAAP,EAAoBC,IAApB,OAA8BD,IAAgB,EAAKH,MAAMM,QAG3DW,MAAM,SAAD,OAAU,EAAKjB,MAAMM,KAArB,6BALP,CASA,MAAyB,EAAKN,MAAtBM,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACRW,EAAa,CACjBhB,GAAIiB,cACJhB,YAAaG,EACbF,IAAKG,EACLa,OAAQ,IAEV,EAAKR,UAAS,SAAAS,GAAS,MAAK,CAC1BpB,SAAS,GAAD,mBAAMoB,EAAUpB,UAAhB,CAA0BiB,U,EAMtCI,mBAAqB,SAAAX,GAAK,OAAI,EAAKC,SAAS,CAAEP,OAAQM,K,EAEtDY,oBAAsB,WACpB,MAA6B,EAAKvB,MAA1BC,EAAR,EAAQA,SACFuB,EADN,EAAkBnB,OACcoB,cAEhC,OAAOxB,EAASI,QAAO,qBAAGF,YACZsB,cAAcC,SAASF,O,EAKvCG,oBAAsB,SAAAnB,GAAU,OAC9B,EAAKI,SAAS,CACZgB,mBAAmB,EACnBpB,WAAYA,K,EAGhBqB,eAAiB,WACf,EAAKjB,UAAS,SAAAS,GAAS,MAAK,CAC1BpB,SAAUoB,EAAUpB,SAASI,QAC3B,qBAAGF,cAAkCkB,EAAUb,cAEjDA,WAAY,Q,4CAIhB,WAAU,IAAD,OACDsB,EAAmBC,KAAKR,sBAG9B,OACE,gCACE,2CACA,uBAAMS,SAAUD,KAAKlB,YAArB,UACE,yCAEE,uBACEoB,KAAK,OACL3B,KAAK,OACL4B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRzB,MAAOoB,KAAKzB,KACZ+B,SAAUN,KAAKtB,kBAGnB,uBACEwB,KAAK,MACL3B,KAAK,SACL4B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRzB,MAAOoB,KAAKzB,KACZ+B,SAAUN,KAAKtB,eAEjB,wBAAQwB,KAAK,SAAb,4BAEF,yDAEE,uBACEA,KAAK,OACL3B,KAAK,SACL4B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRzB,MAAOoB,KAAK1B,OACZgC,SAAU,SAAAC,GAAC,OAAI,EAAKhB,mBAAmBgB,EAAE5B,OAAOC,aAIpD,6BACGmB,EAAiBS,KAAI,gBAAGrC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,IAApB,OACpB,+BACGD,EADH,MACmBC,EACjB,yBACE6B,KAAK,SACLO,QAAS,kBAAM,EAAKb,oBAAoBxB,IAF1C,oBAIUA,OANHD,e,GArHHuC,aA4IH1C,IC1If2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1f4dbd57.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', nameContact: 'Rosie Simpson', tel: '459-12-56' },\r\n      { id: 'id-2', nameContact: 'Hermione Kline', tel: '443-89-12' },\r\n      { id: 'id-3', nameContact: 'Eden Clements', tel: '645-17-79' },\r\n      { id: 'id-4', nameContact: 'Annie Copeland', tel: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n    activeCity: '',\r\n  };\r\n  ////// записує контакт\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  ////////додає контакт\r\n  addContacts = evt => {\r\n    evt.preventDefault();\r\n    if (\r\n      this.state.contacts.some(\r\n        ({ id, nameContact, tel }) => nameContact === this.state.name,\r\n      )\r\n    ) {\r\n      alert(`name \"${this.state.name}\" is already in list`);\r\n      return;\r\n    }\r\n\r\n    const { name, number } = this.state;\r\n    const newContact = {\r\n      id: nanoid(),\r\n      nameContact: name,\r\n      tel: number,\r\n      active: '',\r\n    };\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, newContact],\r\n    }));\r\n  };\r\n\r\n  // шукає контакт\r\n\r\n  handleFilterChange = value => this.setState({ filter: value });\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ nameContact }) =>\r\n      nameContact.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  ////видаляє контакт\r\n  handleStartDeleting = activeCity =>\r\n    this.setState({\r\n      isDeleteModalOpen: true,\r\n      activeCity: activeCity,\r\n    });\r\n\r\n  deleteContacts = () => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(\r\n        ({ nameContact }) => nameContact !== prevState.activeCity,\r\n      ),\r\n      activeCity: '',\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    // console.log(this.deleteContacts());\r\n    return (\r\n      <div>\r\n        <h1>Phonebooc</h1>\r\n        <form onSubmit={this.addContacts}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n              value={this.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            value={this.name}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n        <label>\r\n          Find contact by name\r\n          <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            value={this.filter}\r\n            onChange={e => this.handleFilterChange(e.target.value)}\r\n          />\r\n        </label>\r\n\r\n        <ul>\r\n          {filteredContacts.map(({ id, nameContact, tel }) => (\r\n            <li key={id}>\r\n              {nameContact} : {tel}\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => this.handleStartDeleting(nameContact)}\r\n              >\r\n                Delete {nameContact}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {/* {this.state.contacts.map(({ id, nameContact, tel }) => (\r\n          <ul>\r\n            <li key={id}>\r\n              {nameContact} : {tel}\r\n            </li>\r\n          </ul>\r\n        ))} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}